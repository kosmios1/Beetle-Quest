#tls:
#  certificates:
#    - certFile: /certs/cert.pem
#      keyFile: /certs/key.pem

tls:
  stores:
    default:
      defaultCertificate:
        certFile: /certs/cert.pem
        keyFile: /certs/key.pem

http:
  routers:
    oauth2-server:
      rule: "PathPrefix(`/oauth2`) && Host(`localhost`)"
      entryPoints:
        - websec
      service: oauth2-server
      priority: 1
      tls: true

    auth-service:
      rule: "PathPrefix(`/api/v1/auth`) && Host(`localhost`)"
      entryPoints:
        - websec
      service: auth-service
      priority: 1
      tls: true

    user-service:
      rule: "PathPrefix(`/api/v1/user`) && Host(`localhost`)"
      entryPoints:
        - websec
      service: user-service
      priority: 1
      tls: true

    gacha-service:
      rule: "PathPrefix(`/api/v1/gacha`) && Host(`localhost`)"
      entryPoints:
        - websec
      service: gacha-service
      priority: 1
      tls: true

    static-service:
      rule: "PathPrefix(`/static`) && Host(`localhost`)"
      entryPoints:
        - websec
      service: static-service
      priority: 1
      tls: true

    market-service:
      rule: "PathPrefix(`/api/v1/market`) && Host(`localhost`)"
      entryPoints:
        - websec
      service: market-service
      priority: 1
      tls: true

  services:
    oauth2-server:
      loadBalancer:
        servers:
          - url: "http://oauth2-server:8080"

    auth-service:
      loadBalancer:
        servers:
          - url: "http://auth-service:8080"

    user-service:
      loadBalancer:
        servers:
          - url: "http://user-service:8080"

    gacha-service:
      loadBalancer:
        servers:
          - url: "http://gacha-service:8080"

    static-service:
      loadBalancer:
        servers:
          - url: "http://static-service:8080"

    market-service:
      loadBalancer:
        servers:
          - url: "http://market-service:8080"
