#tls:
#  certificates:
#    - certFile: /certs/cert.pem
#      keyFile: /certs/key.pem

tls:
    stores:
        default:
            defaultCertificate:
                certFile: /certs/cert.pem
                keyFile: /certs/key.pem

http:
    serversTransports:
        insecureTransport:
            # TODO: Change to rootCAs when microservices verify client (traefik) certificates
            insecureSkipVerify: true

    routers:
        oauth2-server:
            rule: "PathPrefix(`/oauth2`) && Host(`localhost`)"
            entryPoints:
                - websec
            service: oauth2-server
            priority: 1
            tls: true

        auth-service:
            rule: "PathPrefix(`/api/v1/auth`) && Host(`localhost`)"
            entryPoints:
                - websec
            service: auth-service
            priority: 1
            tls: true

        user-service:
            rule: "PathPrefix(`/api/v1/user`) && Host(`localhost`)"
            entryPoints:
                - websec
            service: user-service
            priority: 1
            tls: true

        gacha-service:
            rule: "PathPrefix(`/api/v1/gacha`) && Host(`localhost`)"
            entryPoints:
                - websec
            service: gacha-service
            priority: 1
            tls: true

        static-service:
            rule: "PathPrefix(`/static`) && Host(`localhost`)"
            entryPoints:
                - websec
            service: static-service
            priority: 1
            tls: true

        market-service:
            rule: "PathPrefix(`/api/v1/market`) && Host(`localhost`)"
            entryPoints:
                - websec
            service: market-service
            priority: 1
            tls: true

    services:
        oauth2-server:
            loadBalancer:
                servers:
                    - url: "http://oauth2-server:8080"

        auth-service:
            loadBalancer:
                serversTransport: insecureTransport
                servers:
                    - url: "https://auth-service"

        user-service:
            loadBalancer:
                serversTransport: insecureTransport
                servers:
                    - url: "https://user-service"

        gacha-service:
            loadBalancer:
                serversTransport: insecureTransport
                servers:
                    - url: "https://gacha-service"

        static-service:
            loadBalancer:
                serversTransport: insecureTransport
                servers:
                    - url: "https://static-service"

        market-service:
            loadBalancer:
                serversTransport: insecureTransport
                servers:
                    - url: "https://market-service"
