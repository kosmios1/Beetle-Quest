{
	"info": {
		"_postman_id": "f655693f-71a6-4de6-b819-025d986de6fb",
		"name": "Beetle-Quest Unit",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "39361032"
	},
	"item": [
		{
			"name": "gacha",
			"item": [
				{
					"name": "public",
					"item": [
						{
							"name": "Get system gacha list",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Test for status code",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"// Test for response body containing specific gacha items",
											"pm.test(\"Response body contains Munich Grasshopper\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"Munich Grasshopper\");",
											"});",
											"",
											"pm.test(\"Response body contains Warrior Centipede\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"Warrior Centipede\");",
											"});",
											"",
											"pm.test(\"Response body contains Druid Bee\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"Druid Bee\");",
											"});",
											"",
											"pm.test(\"Response body contains Warrior Beetle\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"Warrior Beetle\");",
											"});",
											"",
											"pm.test(\"Response body contains Druid Butterfly 1\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"Druid Butterfly 1\");",
											"});",
											"",
											"pm.test(\"Response body contains Tank Mole Cricket\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"Tank Mole Cricket\");",
											"});",
											"",
											"pm.test(\"Response body contains Warrior Locust\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"Warrior Locust\");",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/gacha/list",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gacha",
										"list"
									]
								}
							},
							"response": [
								{
									"name": "System's gacha list.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": "Added as a part of security scheme: oauth2"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/gacha/list",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gacha",
												"list"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Status bad requests.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": "Added as a part of security scheme: oauth2"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/gacha/list",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gacha",
												"list"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal server error.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": "Added as a part of security scheme: oauth2"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/gacha/list",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gacha",
												"list"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get user gacha details",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Test for status code",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(pm.response.code).to.equal(200);",
											"});",
											"",
											"// Test for response body properties and correctness of the output",
											"pm.test(\"Response body has correct gacha_id, name, rarity, price, and image_path properties\", function () {",
											"    pm.expect(pm.response.json().gacha_id).to.eql([ 150, 248, 206, 212, 3, 5, 67, 173, 158, 82, 119, 144, 19, 250, 133, 2 ]);",
											"    pm.expect(pm.response.json().name).to.eql(\"Mage Mosquito\");",
											"    pm.expect(pm.response.json().rarity).to.eql(1);",
											"    pm.expect(pm.response.json().price).to.eql(5000);",
											"    pm.expect(pm.response.json().image_path).to.eql(\"/static/images/mage_mosquito_uncommon.webp\");",
											"});",
											"",
											"// Test for response time",
											"pm.test(\"Response time is less than 200ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(200);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/gacha/{{gachaId}}/user/{{userId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gacha",
										"{{gachaId}}",
										"user",
										"{{userId}}"
									]
								}
							},
							"response": [
								{
									"name": "User gacha details.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": "Added as a part of security scheme: oauth2"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/gacha/:gacha_id/user/:user_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gacha",
												":gacha_id",
												"user",
												":user_id"
											],
											"variable": [
												{
													"key": "gacha_id"
												},
												{
													"key": "user_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Status bad requests.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": "Added as a part of security scheme: oauth2"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/gacha/:gacha_id/user/:user_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gacha",
												":gacha_id",
												"user",
												":user_id"
											],
											"variable": [
												{
													"key": "gacha_id"
												},
												{
													"key": "user_id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Status not found.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": "Added as a part of security scheme: oauth2"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/gacha/:gacha_id/user/:user_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gacha",
												":gacha_id",
												"user",
												":user_id"
											],
											"variable": [
												{
													"key": "gacha_id"
												},
												{
													"key": "user_id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal server error.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": "Added as a part of security scheme: oauth2"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/gacha/:gacha_id/user/:user_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gacha",
												":gacha_id",
												"user",
												":user_id"
											],
											"variable": [
												{
													"key": "gacha_id"
												},
												{
													"key": "user_id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get gacha details",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Test for status code",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"// Test for response time",
											"pm.test(\"Response time is less than 200ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(200);",
											"});",
											"",
											"// Test for specific properties in the response body",
											"pm.test(\"Response body has gacha_id, name, rarity, price, and image_path properties with specific values\", function () {",
											"    pm.expect(pm.response.json().gacha_id).to.eql(\"96f8ced4-0305-43ad-9e52-779013fa8502\");",
											"    pm.expect(pm.response.json().name).to.eql(\"Mage Mosquito\");",
											"    pm.expect(pm.response.json().rarity).to.eql(\"Uncommon\");",
											"    pm.expect(pm.response.json().price).to.eql(5000);",
											"    pm.expect(pm.response.json().image_path).to.eql(\"/static/images/mage_mosquito_uncommon.webp\");",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/gacha/{{gachaId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gacha",
										"{{gachaId}}"
									]
								}
							},
							"response": [
								{
									"name": "System's gacha details.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": "Added as a part of security scheme: oauth2"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/gacha/:gacha_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gacha",
												":gacha_id"
											],
											"variable": [
												{
													"key": "gacha_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Status bad requests.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": "Added as a part of security scheme: oauth2"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/gacha/:gacha_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gacha",
												":gacha_id"
											],
											"variable": [
												{
													"key": "gacha_id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal server error.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": "Added as a part of security scheme: oauth2"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/gacha/:gacha_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gacha",
												":gacha_id"
											],
											"variable": [
												{
													"key": "gacha_id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get user gacha list",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Test for status code",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(pm.response.code).to.equal(200);",
											"});",
											"",
											"// Test for response body properties and correctness of the output",
											"pm.test(\"Response body has correct gacha_id, name, rarity, price, and image_path properties\", function () {",
											"    pm.expect(pm.response.json()[0].gacha_id).to.eql([ 150, 248, 206, 212, 3, 5, 67, 173, 158, 82, 119, 144, 19, 250, 133, 2 ]);",
											"    pm.expect(pm.response.json()[0].name).to.eql(\"Mage Mosquito\");",
											"    pm.expect(pm.response.json()[0].rarity).to.eql(1);",
											"    pm.expect(pm.response.json()[0].price).to.eql(5000);",
											"    pm.expect(pm.response.json()[0].image_path).to.eql(\"/static/images/mage_mosquito_uncommon.webp\");",
											"});",
											"",
											"// Test for response time",
											"pm.test(\"Response time is less than 200ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(200);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/gacha/user/{{userId}}/list",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gacha",
										"user",
										"{{userId}}",
										"list"
									]
								}
							},
							"response": [
								{
									"name": "User gacha list.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": "Added as a part of security scheme: oauth2"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/gacha/user/:user_id/list",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gacha",
												"user",
												":user_id",
												"list"
											],
											"variable": [
												{
													"key": "user_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Status bad requests.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": "Added as a part of security scheme: oauth2"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/gacha/user/:user_id/list",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gacha",
												"user",
												":user_id",
												"list"
											],
											"variable": [
												{
													"key": "user_id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Status not found.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": "Added as a part of security scheme: oauth2"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/gacha/user/:user_id/list",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gacha",
												"user",
												":user_id",
												"list"
											],
											"variable": [
												{
													"key": "user_id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal server error.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": "Added as a part of security scheme: oauth2"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/gacha/user/:user_id/list",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gacha",
												"user",
												":user_id",
												"list"
											],
											"variable": [
												{
													"key": "user_id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Get user gacha list",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/gacha/user/{{userId}}/list",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gacha",
												"user",
												"{{userId}}",
												"list"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": ":status",
											"value": 200
										},
										{
											"key": "content-security-policy",
											"value": "default-src 'self'; img-src 'self'; script-src 'self' 'unsafe-eval'; style-src 'self'"
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=315360000; includeSubdomains"
										},
										{
											"key": "x-content-type-options",
											"value": "nosniff"
										},
										{
											"key": "x-download-options",
											"value": "noopen"
										},
										{
											"key": "x-frame-options",
											"value": "DENY"
										},
										{
											"key": "x-xss-protection",
											"value": "1; mode=block"
										},
										{
											"key": "content-length",
											"value": "176"
										},
										{
											"key": "date",
											"value": "Sun, 01 Dec 2024 18:01:51 GMT"
										}
									],
									"cookie": [],
									"body": "[\n    {\n        \"gacha_id\": [\n            150,\n            248,\n            206,\n            212,\n            3,\n            5,\n            67,\n            173,\n            158,\n            82,\n            119,\n            144,\n            19,\n            250,\n            133,\n            2\n        ],\n        \"name\": \"Mage Mosquito\",\n        \"rarity\": 1,\n        \"price\": 5000,\n        \"image_path\": \"/static/images/mage_mosquito_uncommon.webp\"\n    }\n]"
								}
							]
						}
					]
				},
				{
					"name": "internal",
					"item": []
				}
			]
		}
	],
	"auth": {
		"type": "jwt",
		"jwt": [
			{
				"key": "isSecretBase64Encoded",
				"value": true,
				"type": "boolean"
			},
			{
				"key": "secret",
				"value": "5t9Z+Rhx8iKaApbGtf+vRM72rzDNBQV4V7nwp0sNKME=",
				"type": "string"
			},
			{
				"key": "payload",
				"value": "{\n    \"sub\": \"02b84c2f-6b7d-48fd-9850-35610a1d4373\"\n}",
				"type": "string"
			},
			{
				"key": "algorithm",
				"value": "HS512",
				"type": "string"
			},
			{
				"key": "addTokenTo",
				"value": "header",
				"type": "string"
			},
			{
				"key": "headerPrefix",
				"value": "Bearer",
				"type": "string"
			},
			{
				"key": "queryParamKey",
				"value": "token",
				"type": "string"
			},
			{
				"key": "header",
				"value": "{}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://localhost:8080/api/v1",
			"type": "default"
		},
		{
			"key": "gachaId",
			"value": "96f8ced4-0305-43ad-9e52-779013fa8502",
			"type": "default"
		},
		{
			"key": "userId",
			"value": "744a2f4d-a693-4352-916e-64f4ef94b709",
			"type": "default"
		}
	]
}
